/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot3, Ballot3Interface } from "../Ballot3";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBytes32ArrayForInput",
    outputs: [
      {
        internalType: "bytes32[3]",
        name: "b32Arr",
        type: "bytes32[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "winnerName_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016cc380380620016cc833981810160405281019062000037919062000243565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b81518110156200017657600260405180604001604052808484815181106200010f576200010e620003b3565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505080806200016d9062000336565b915050620000e2565b505062000450565b6000620001956200018f84620002bd565b62000294565b90508083825260208201905082856020860282011115620001bb57620001ba62000416565b5b60005b85811015620001ef5781620001d488826200022c565b845260208401935060208301925050600181019050620001be565b5050509392505050565b600082601f83011262000211576200021062000411565b5b8151620002238482602086016200017e565b91505092915050565b6000815190506200023d8162000436565b92915050565b6000602082840312156200025c576200025b62000420565b5b600082015167ffffffffffffffff8111156200027d576200027c6200041b565b5b6200028b84828501620001f9565b91505092915050565b6000620002a0620002b3565b9050620002ae828262000300565b919050565b6000604051905090565b600067ffffffffffffffff821115620002db57620002da620003e2565b5b602082029050602081019050919050565b6000819050919050565b6000819050919050565b6200030b8262000425565b810181811067ffffffffffffffff821117156200032d576200032c620003e2565b5b80604052505050565b60006200034382620002f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000379576200037862000384565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200044181620002ec565b81146200044d57600080fd5b50565b61126c80620004606000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80635c19a95c116100665780635c19a95c14610120578063609ff1bd1461013c5780639e7b8d611461015a578063a3ec138d14610176578063e2ba53f0146101a957610092565b806265f9b5146100975780630121b93f146100b5578063013cf08b146100d15780632e4176cf14610102575b600080fd5b61009f6101c7565b6040516100ac9190610d23565b60405180910390f35b6100cf60048036038101906100ca9190610b09565b61024f565b005b6100eb60048036038101906100e69190610b09565b610396565b6040516100f9929190610d59565b60405180910390f35b61010a6103ca565b6040516101179190610d08565b60405180910390f35b61013a60048036038101906101359190610adc565b6103ee565b005b61014461078a565b6040516101519190610e82565b60405180910390f35b610174600480360381019061016f9190610adc565b610812565b005b610190600480360381019061018b9190610adc565b6109ff565b6040516101a09493929190610e9d565b60405180910390f35b6101b1610a5c565b6040516101be9190610d3e565b60405180910390f35b6101cf610a90565b60405180606001604052807f5761726f646f6d0000000000000000000000000000000000000000000000000081526020017f5461616b6f726e0000000000000000000000000000000000000000000000000081526020017f4e617261746f726e000000000000000000000000000000000000000000000000815250905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414156102da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d190610d82565b60405180910390fd5b8060010160009054906101000a900460ff161561032c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032390610dc2565b60405180910390fd5b60018160010160006101000a81548160ff02191690831515021790555081816002018190555080600001546002838154811061036b5761036a611040565b5b9060005260206000209060020201600101600082825461038b9190610f20565b925050819055505050565b600281815481106103a657600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff1615610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610de2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990610e62565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461066257600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490610e22565b60405180910390fd5b6104f3565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff1615610765578160000154600282600201548154811061073957610738611040565b5b906000526020600020906002020160010160008282546107599190610f20565b92505081905550610785565b816000015481600001600082825461077d9190610f20565b925050819055505b505050565b6000806000905060005b60028054905081101561080d5781600282815481106107b6576107b5611040565b5b90600052602060002090600202016001015411156107fa57600281815481106107e2576107e1611040565b5b90600052602060002090600202016001015491508092505b808061080590610fc8565b915050610794565b505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089790610e02565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790610e42565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154146109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90610da2565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905084565b60006002610a6861078a565b81548110610a7957610a78611040565b5b906000526020600020906002020160000154905090565b6040518060600160405280600390602082028036833780820191505090505090565b600081359050610ac181611208565b92915050565b600081359050610ad68161121f565b92915050565b600060208284031215610af257610af161106f565b5b6000610b0084828501610ab2565b91505092915050565b600060208284031215610b1f57610b1e61106f565b5b6000610b2d84828501610ac7565b91505092915050565b6000610b428383610bc3565b60208301905092915050565b610b5781610f76565b82525050565b610b6681610eec565b610b708184610f04565b9250610b7b82610ee2565b8060005b83811015610bac578151610b938782610b36565b9650610b9e83610ef7565b925050600181019050610b7f565b505050505050565b610bbd81610f88565b82525050565b610bcc81610f94565b82525050565b610bdb81610f94565b82525050565b6000610bee601483610f0f565b9150610bf982611074565b602082019050919050565b6000610c11602583610f0f565b9150610c1c8261109d565b604082019050919050565b6000610c34600e83610f0f565b9150610c3f826110ec565b602082019050919050565b6000610c57601283610f0f565b9150610c6282611115565b602082019050919050565b6000610c7a602883610f0f565b9150610c858261113e565b604082019050919050565b6000610c9d601983610f0f565b9150610ca88261118d565b602082019050919050565b6000610cc0601883610f0f565b9150610ccb826111b6565b602082019050919050565b6000610ce3601e83610f0f565b9150610cee826111df565b602082019050919050565b610d0281610fbe565b82525050565b6000602082019050610d1d6000830184610b4e565b92915050565b6000606082019050610d386000830184610b5d565b92915050565b6000602082019050610d536000830184610bd2565b92915050565b6000604082019050610d6e6000830185610bd2565b610d7b6020830184610cf9565b9392505050565b60006020820190508181036000830152610d9b81610be1565b9050919050565b60006020820190508181036000830152610dbb81610c04565b9050919050565b60006020820190508181036000830152610ddb81610c27565b9050919050565b60006020820190508181036000830152610dfb81610c4a565b9050919050565b60006020820190508181036000830152610e1b81610c6d565b9050919050565b60006020820190508181036000830152610e3b81610c90565b9050919050565b60006020820190508181036000830152610e5b81610cb3565b9050919050565b60006020820190508181036000830152610e7b81610cd6565b9050919050565b6000602082019050610e976000830184610cf9565b92915050565b6000608082019050610eb26000830187610cf9565b610ebf6020830186610bb4565b610ecc6040830185610b4e565b610ed96060830184610cf9565b95945050505050565b6000819050919050565b600060039050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b6000610f2b82610fbe565b9150610f3683610fbe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f6b57610f6a611011565b5b828201905092915050565b6000610f8182610f9e565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fd382610fbe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561100657611005611011565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f486173206e6f20726967687420746f20766f7465000000000000000000000000600082015250565b7f566f746572206e65766572206765747320726967687420746f20766f7465206260008201527f65666f7265000000000000000000000000000000000000000000000000000000602082015250565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b7f596f7520616c726561647920766f7465642e0000000000000000000000000000600082015250565b7f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060008201527f746f20766f74652e000000000000000000000000000000000000000000000000602082015250565b7f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000600082015250565b7f54686520766f74657220616c726561647920766f7465642e0000000000000000600082015250565b7f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000600082015250565b61121181610f76565b811461121c57600080fd5b50565b61122881610fbe565b811461123357600080fd5b5056fea2646970667358221220c4e81461a7d03edbe0e3443f6aab008cb9b276a2fb827beaf6027c28bf5fa18d64736f6c63430008070033";

export class Ballot3__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    proposalNames: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot3> {
    return super.deploy(proposalNames, overrides || {}) as Promise<Ballot3>;
  }
  getDeployTransaction(
    proposalNames: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  attach(address: string): Ballot3 {
    return super.attach(address) as Ballot3;
  }
  connect(signer: Signer): Ballot3__factory {
    return super.connect(signer) as Ballot3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Ballot3Interface {
    return new utils.Interface(_abi) as Ballot3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ballot3 {
    return new Contract(address, _abi, signerOrProvider) as Ballot3;
  }
}
