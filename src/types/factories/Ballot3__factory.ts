/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot3, Ballot3Interface } from "../Ballot3";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Delegate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "GiveRightToVote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBytes32ArrayForInput",
    outputs: [
      {
        internalType: "bytes32[3]",
        name: "b32Arr",
        type: "bytes32[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "winnerName_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200188938038062001889833981810160405281019062000037919062000243565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b81518110156200017657600260405180604001604052808484815181106200010f576200010e620003b3565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505080806200016d9062000336565b915050620000e2565b505062000450565b6000620001956200018f84620002bd565b62000294565b90508083825260208201905082856020860282011115620001bb57620001ba62000416565b5b60005b85811015620001ef5781620001d488826200022c565b845260208401935060208301925050600181019050620001be565b5050509392505050565b600082601f83011262000211576200021062000411565b5b8151620002238482602086016200017e565b91505092915050565b6000815190506200023d8162000436565b92915050565b6000602082840312156200025c576200025b62000420565b5b600082015167ffffffffffffffff8111156200027d576200027c6200041b565b5b6200028b84828501620001f9565b91505092915050565b6000620002a0620002b3565b9050620002ae828262000300565b919050565b6000604051905090565b600067ffffffffffffffff821115620002db57620002da620003e2565b5b602082029050602081019050919050565b6000819050919050565b6000819050919050565b6200030b8262000425565b810181811067ffffffffffffffff821117156200032d576200032c620003e2565b5b80604052505050565b60006200034382620002f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000379576200037862000384565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200044181620002ec565b81146200044d57600080fd5b50565b61142980620004606000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80635c19a95c116100665780635c19a95c14610135578063609ff1bd146101515780639e7b8d611461016f578063a3ec138d1461018b578063e2ba53f0146101be5761009d565b806265f9b5146100a25780630121b93f146100c0578063013cf08b146100dc5780632e4176cf1461010d57806332b7a7611461012b575b600080fd5b6100aa6101dc565b6040516100b79190610e97565b60405180910390f35b6100da60048036038101906100d59190610c23565b610264565b005b6100f660048036038101906100f19190610c23565b61040b565b604051610104929190610ecd565b60405180910390f35b61011561043f565b6040516101229190610e45565b60405180910390f35b610133610463565b005b61014f600480360381019061014a9190610bf6565b61049a565b005b61015961086d565b6040516101669190611016565b60405180910390f35b61018960048036038101906101849190610bf6565b6108f5565b005b6101a560048036038101906101a09190610bf6565b610b19565b6040516101b59493929190611031565b60405180910390f35b6101c6610b76565b6040516101d39190610eb2565b60405180910390f35b6101e4610baa565b60405180606001604052807f5761726f646f6d0000000000000000000000000000000000000000000000000081526020017f5461616b6f726e0000000000000000000000000000000000000000000000000081526020017f4e617261746f726e000000000000000000000000000000000000000000000000815250905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414156102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610ef6565b60405180910390fd5b8060010160009054906101000a900460ff1615610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610f36565b60405180910390fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600283815481106103805761037f6111d4565b5b906000526020600020906002020160010160008282546103a091906110b4565b925050819055507fea66f58e474bc09f580000e81f31b334d171db387d0c6098ba47bd897741679b3383600285815481106103de576103dd6111d4565b5b9060005260206000209060020201600101546040516103ff93929190610e60565b60405180910390a15050565b6002818154811061041b57600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161049090610fb6565b60405180910390a1565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff161561052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690610f56565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590610ff6565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070e57600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090610f96565b60405180910390fd5b61059f565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff161561081157816000015460028260020154815481106107e5576107e46111d4565b5b9060005260206000209060020201600101600082825461080591906110b4565b92505081905550610831565b816000015481600001600082825461082991906110b4565b925050819055505b7f49339f0f595f326ceb5a2507406676ce27cf0ad56a280e47bbda53d4d90031aa836040516108609190610e45565b60405180910390a1505050565b6000806000905060005b6002805490508110156108f0578160028281548110610899576108986111d4565b5b90600052602060002090600202016001015411156108dd57600281815481106108c5576108c46111d4565b5b90600052602060002090600202016001015491508092505b80806108e89061115c565b915050610877565b505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90610f76565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a90610fd6565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90610f16565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507faf41c3ab39410a9699b71c53288271a2b4ed3193b20bd51ed9049742230117a081604051610b0e9190610e45565b60405180910390a150565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905084565b60006002610b8261086d565b81548110610b9357610b926111d4565b5b906000526020600020906002020160000154905090565b6040518060600160405280600390602082028036833780820191505090505090565b600081359050610bdb816113c5565b92915050565b600081359050610bf0816113dc565b92915050565b600060208284031215610c0c57610c0b611203565b5b6000610c1a84828501610bcc565b91505092915050565b600060208284031215610c3957610c38611203565b5b6000610c4784828501610be1565b91505092915050565b6000610c5c8383610cdd565b60208301905092915050565b610c718161110a565b82525050565b610c8081611080565b610c8a8184611098565b9250610c9582611076565b8060005b83811015610cc6578151610cad8782610c50565b9650610cb88361108b565b925050600181019050610c99565b505050505050565b610cd78161111c565b82525050565b610ce681611128565b82525050565b610cf581611128565b82525050565b6000610d086014836110a3565b9150610d1382611208565b602082019050919050565b6000610d2b6025836110a3565b9150610d3682611231565b604082019050919050565b6000610d4e600e836110a3565b9150610d5982611280565b602082019050919050565b6000610d716012836110a3565b9150610d7c826112a9565b602082019050919050565b6000610d946028836110a3565b9150610d9f826112d2565b604082019050919050565b6000610db76019836110a3565b9150610dc282611321565b602082019050919050565b6000610dda6003836110a3565b9150610de58261134a565b602082019050919050565b6000610dfd6018836110a3565b9150610e0882611373565b602082019050919050565b6000610e20601e836110a3565b9150610e2b8261139c565b602082019050919050565b610e3f81611152565b82525050565b6000602082019050610e5a6000830184610c68565b92915050565b6000606082019050610e756000830186610c68565b610e826020830185610e36565b610e8f6040830184610e36565b949350505050565b6000606082019050610eac6000830184610c77565b92915050565b6000602082019050610ec76000830184610cec565b92915050565b6000604082019050610ee26000830185610cec565b610eef6020830184610e36565b9392505050565b60006020820190508181036000830152610f0f81610cfb565b9050919050565b60006020820190508181036000830152610f2f81610d1e565b9050919050565b60006020820190508181036000830152610f4f81610d41565b9050919050565b60006020820190508181036000830152610f6f81610d64565b9050919050565b60006020820190508181036000830152610f8f81610d87565b9050919050565b60006020820190508181036000830152610faf81610daa565b9050919050565b60006020820190508181036000830152610fcf81610dcd565b9050919050565b60006020820190508181036000830152610fef81610df0565b9050919050565b6000602082019050818103600083015261100f81610e13565b9050919050565b600060208201905061102b6000830184610e36565b92915050565b60006080820190506110466000830187610e36565b6110536020830186610cce565b6110606040830185610c68565b61106d6060830184610e36565b95945050505050565b6000819050919050565b600060039050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60006110bf82611152565b91506110ca83611152565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110ff576110fe6111a5565b5b828201905092915050565b600061111582611132565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061116782611152565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561119a576111996111a5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f486173206e6f20726967687420746f20766f7465000000000000000000000000600082015250565b7f566f746572206e65766572206765747320726967687420746f20766f7465206260008201527f65666f7265000000000000000000000000000000000000000000000000000000602082015250565b7f416c726561647920766f7465642e000000000000000000000000000000000000600082015250565b7f596f7520616c726561647920766f7465642e0000000000000000000000000000600082015250565b7f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060008201527f746f20766f74652e000000000000000000000000000000000000000000000000602082015250565b7f466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000600082015250565b7f4865790000000000000000000000000000000000000000000000000000000000600082015250565b7f54686520766f74657220616c726561647920766f7465642e0000000000000000600082015250565b7f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000600082015250565b6113ce8161110a565b81146113d957600080fd5b50565b6113e581611152565b81146113f057600080fd5b5056fea26469706673582212201d69c681fb0b89e73d9f15358da3d71feb3d127e6ec4d13de472e22927c79f5064736f6c63430008070033";

export class Ballot3__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    proposalNames: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot3> {
    return super.deploy(proposalNames, overrides || {}) as Promise<Ballot3>;
  }
  getDeployTransaction(
    proposalNames: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  attach(address: string): Ballot3 {
    return super.attach(address) as Ballot3;
  }
  connect(signer: Signer): Ballot3__factory {
    return super.connect(signer) as Ballot3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Ballot3Interface {
    return new utils.Interface(_abi) as Ballot3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ballot3 {
    return new Contract(address, _abi, signerOrProvider) as Ballot3;
  }
}
